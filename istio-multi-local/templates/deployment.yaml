---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.numreplicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      namespace: {{ .Values.namespace }}
      labels:
        app: {{ .Chart.Name }}
      annotations:
        deployedTime: {{ now }} # use `now` to make sure every time the deployment is different, so that no need to use `--recreate-pods`
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: /app/metrics
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "skycmoon/helloworld:{{ .Values.version }}"
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: VERSION
              value: {{.Values.version}}
            - name: CLUSTER
              value: {{.Values.cluster}}
            - name: ENVIRONMENT
              value: {{.Values.environment}}
            - name: REGION
              value: {{.Values.region}}
            - name: NAME
              value: {{ .Chart.Name }}
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - sleep 3
          livenessProbe:
            httpGet:
              path: /app
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 60
          readinessProbe:
            httpGet:
              path: /app
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 3
          resources:
            requests:
              memory: {{.Values.memRequest}}
              cpu: {{.Values.cpuRequest}}
            limits:
              memory: {{.Values.memLimit}}
              cpu: {{.Values.cpuLimit}}


---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Values.namespace }}
spec:
  minReplicas: {{ .Values.numreplicas }}
  maxReplicas: {{ .Values.maxreplicas }}
  metrics:
    - resource:
        name: memory
        target:
          averageUtilization: {{ .Values.memUtilizationThreshold  }}
          type: Utilization
      type: Resource
    - resource:
        name: cpu
        target:
          averageUtilization: {{ .Values.cpuUtilizationThreshold  }}
          type: Utilization
      type: Resource
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ .Chart.Name }}